/**
 * Script seguro para preparar el despliegue
 * Este script NO contiene informaci√≥n sensible, solo prepara los archivos de configuraci√≥n
 */
const fs = require('fs');

console.log('üîí Preparando configuraci√≥n para despliegue...');

// 1. Asegurarse que el archivo .env est√° en .gitignore
const gitignorePath = './.gitignore';
let gitignoreContent = '';

try {
  gitignoreContent = fs.readFileSync(gitignorePath, 'utf8');
} catch (error) {
  gitignoreContent = '';
}

if (!gitignoreContent.includes('.env')) {
  console.log('‚ö†Ô∏è A√±adiendo .env a .gitignore para proteger tus credenciales');
  fs.appendFileSync(gitignorePath, '\n# Archivos de entorno\n.env\n.env.*\n');
}

// 2. Verificar que existen los archivos de configuraci√≥n
const requiredFiles = [
  { path: 'Backend/.env', message: 'Backend/.env - Contiene credenciales de MongoDB y configuraci√≥n' },
  { path: 'Frontend/.env.production', message: 'Frontend/.env.production - Contiene URL de API para producci√≥n' }
];

let missingFiles = false;
requiredFiles.forEach(file => {
  if (!fs.existsSync(file.path)) {
    console.log(`‚ùå Falta archivo: ${file.path}`);
    console.log(`   ${file.message}`);
    missingFiles = true;
  }
});

if (missingFiles) {
  console.log('\n‚ö†Ô∏è Por favor, crea los archivos faltantes antes de continuar.');
  console.log('   Consulta la documentaci√≥n para saber qu√© debe contener cada archivo.');
  process.exit(1);
}

console.log('‚úÖ Todos los archivos de configuraci√≥n est√°n presentes');
console.log('\nüöÄ Instrucciones para desplegar:');
console.log('1. Backend (Render):');
console.log('   - Sube tu c√≥digo a GitHub');
console.log('   - Ve a dashboard.render.com');
console.log('   - Configura las variables de entorno desde Backend/.env');
console.log('   - Haz clic en "Deploy"');
console.log('\n2. Frontend (InfinityFree):');
console.log('   - Ejecuta: cd Frontend && npm run build');
console.log('   - Sube los archivos de Frontend/dist a tu hosting');

console.log('\n‚ú® ¬°Listo para desplegar de forma segura!');
